#!/bin/bash

set -e

_isosec () {
	local isosec
	isosec=$(date -u +%y%m%d%H%M%S)
	echo $isosec
}

_new_zet() {
	[[ "$1" == "new" ]] || return 1
	local dir readme
	dir="$ZET/$(_isosec)"
	readme="$dir/README.md"
	mkdir -p "$dir"
	touch $readme
	echo $readme
}

zetfolder=$(ls -l $ZET | cut -d " " -f10 | tail -n +2 | head -n -1)
if [[ $1 == "--help" ]]; then
	echo "zet [list | open | new]"
elif [[ $1 == "new" ]]; then
	file=$(_new_zet "$1")
	vim $file
elif [[ $1 == "open" ]]; then
	p=2;
	max=$((1 + $(ls -l $ZET | tail -n +2 | head -n -1 | wc -l)))
	if [[ $2 == "-p" && -n $3 && $3 -gt 0 && $3 -lt $max ]]; then
		p=$(($max - $3 + 1))
	elif [[ $2 == "-p" ]]; then
		echo "error: bad option args: [1-$(($max - 1))]"
		exit 1
	elif [[ $zetfolder =~ (^|[[:space:]])$2($|[[:space:]]) ]] && vim "$ZET/$2/README.md"; then
		exit 0
	elif [[ -n $2 ]]; then
		echo "error: invalid param: [-p | <zetid>]"
		exit 2
	fi
	var=$(ls -l $ZET | cut -d " " -f10 | tail -n$p | head -n1)
	echo "zetid: $var"
	vim $ZET"/"$var"/README.md"
elif [[ $1 == "list" ]]; then
	for id in $zetfolder
	do
		zetcontent=$(cat $ZET/$id/README.md | head -n1)
		echo "$id | $zetcontent"
	done
else
	echo "error: invalid arg: zet --help"
fi
